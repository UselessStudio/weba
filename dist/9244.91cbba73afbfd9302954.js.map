{"version":3,"file":"9244.91cbba73afbfd9302954.js","mappings":"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C,EA9vDwBytC,EAC1Cl1B,OACAiyB,gBACAkD,gBACApE,oBACAoB,yBACApO,UACAl1B,WACAumC,aACA/a,UACAC,SACA/V,iBACA5c,SACA2b,WACAiqB,UACAsC,qBACArlB,kBACAkB,QACA9jB,OACAomC,eACA0C,eACAZ,0BACAziB,uBACA0iB,wBACApC,gBACArhB,iBACA+lB,aACA+B,iBACA9B,sBACAjP,sBACAkR,wBACA/oB,gBACAonB,aACAlE,wBACAgE,0BACA2C,oBACA7C,uBACAK,oBACAG,uBACAE,mBACA1lB,iBACAohB,eACAlL,gBACA2P,wBACAjF,yBACAC,4BACAE,qBACAC,iBACA8E,gBACAE,cACAE,sBACAE,eACAxE,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACAuE,iBACAjwB,cACAowB,sBACAriB,sBACAxlB,SACA4jC,YACA3B,+BACAgH,4BACAxR,mBACAyR,WACA1sC,aACAkpC,sBACAC,gBACAyC,iBACAlR,yBACAtf,0BACAssB,qBACAqE,eACAD,uBACAG,sBACAC,gBACA/D,uBACAwE,aACAzjB,kBACAJ,aACAsjB,2BACAzD,UACAE,mBACAT,uBACAE,iBACAE,oBACAO,wBAEA,MAAM,YACJ6D,GAAW,WACXC,GAAU,WACVC,GAAU,gBACVlrB,GAAe,cACfmrB,GAAa,eACbC,GAAc,qBACdC,GAAoB,WACpBC,GAAU,eACVC,GAAc,oBACdC,GAAmB,WACnBC,GAAU,uBACVC,GAAsB,cACtBC,GAAa,qBACbC,GAAoB,iBACpB5L,GAAgB,oCAChB1F,GAAmC,wBACnCuR,GAAuB,oBACvBC,GAAmB,kBACnBC,GAAiB,YACjBC,GAAW,yBACXnkB,GAAwB,kBACxBokB,GAAiB,kBACjBC,GAAiB,qBACjBC,KACE3tC,EAAAA,EAAAA,MAEEC,IAAOC,EAAAA,GAAAA,KAGP+wB,IAAWvrB,EAAAA,EAAAA,IAA4B,MAGvCkoC,IAAmBloC,EAAAA,EAAAA,IAA0B,OAE5CsjB,GAAS6kB,KAAWC,EAAAA,EAAAA,IAAU,KAC9BC,GAAWC,KAAgBhoC,EAAAA,EA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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/FolderIcon.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type {\n  FC,\n  RefObject,\n  StateHookSetter,\n} from '../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useCallback,\n  useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiInputMessageReplyInfo,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport type { Signal } from '../../util/signals';\nimport {\n  ApiMessageEntityTypes,\n  MAIN_THREAD_ID,\n} from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH, DRAFT_DEBOUNCE,\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation, requestNextMutation,\n} from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia, canReplaceMessageMedia, containsCustomEmoji,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot, isUploadingFileSticker,\n  isUserId, stripCustomEmoji,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { getIsDirectTextInputDisabled } from '../../util/directInputManager';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport parseEmojiOnlyString from '../../util/emoji/parseEmojiOnlyString';\nimport { ensureProtocol } from '../../util/ensureProtocol';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport getKeyFromEvent from '../../util/getKeyFromEvent';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { debounce } from '../../util/schedulers';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport stopEvent from '../../util/stopEvent';\nimport {\n  IS_ANDROID,\n  // IS_EMOJI_SUPPORTED,\n  IS_IOS,\n  IS_TOUCH_ENV,\n  IS_VOICE_RECORDING_SUPPORTED,\n} from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { preparePastedHtml } from '../middle/composer/helpers/cleanHtml';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport getFilesFromDataTransferItems from '../middle/composer/helpers/getFilesFromDataTransferItems';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useRunDebounced from '../../hooks/useRunDebounced';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useVirtualBackdrop from '../../hooks/useVirtualBackdrop';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../hooks/window/useBeforeUnload';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useInputCustomEmojis from '../middle/composer/hooks/useInputCustomEmojis';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport TextTimer from '../ui/TextTimer';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\nimport '../middle/composer/TextFormatter.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\ninterface Token {\n  type: ApiMessageEntityTypes | 'text';\n  value?: string;\n  children?: Token[];\n  language?: string;\n  url?: string;\n  userId?: string;\n  documentId?: string;\n}\n\ninterface ASTNode {\n  type: ApiMessageEntityTypes | 'text' | 'root';\n  value?: string;\n  children?: ASTNode[];\n  language?: string;\n  url?: string;\n  userId?: string;\n  documentId?: string;\n}\n\nconst MARKUP_SYMBOLS = {\n  [ApiMessageEntityTypes.Bold]: '**',\n  [ApiMessageEntityTypes.Italic]: '*',\n  [ApiMessageEntityTypes.Strike]: '~~',\n  [ApiMessageEntityTypes.Underline]: '__',\n  [ApiMessageEntityTypes.Code]: '`',\n  [ApiMessageEntityTypes.Pre]: '```',\n  [ApiMessageEntityTypes.Blockquote]: '```',\n  [ApiMessageEntityTypes.Spoiler]: '||',\n  [ApiMessageEntityTypes.TextUrl]: ['[', ']'],\n  [ApiMessageEntityTypes.CustomEmoji]: ['![', ']'],\n  [ApiMessageEntityTypes.Mention]: '@',\n} as const;\n\nconst HTML_TAGS = {\n  [ApiMessageEntityTypes.Bold]: 'strong',\n  [ApiMessageEntityTypes.Italic]: 'em',\n  [ApiMessageEntityTypes.Strike]: 'del',\n  [ApiMessageEntityTypes.Underline]: 'u',\n  [ApiMessageEntityTypes.Code]: 'code',\n  [ApiMessageEntityTypes.Pre]: 'pre',\n  [ApiMessageEntityTypes.Blockquote]: 'blockquote',\n  [ApiMessageEntityTypes.Spoiler]: 'span',\n} as const;\n\ninterface TextEditorProps {\n  inputRef?: React.RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  onKeyDown?: React.KeyboardEventHandler;\n  ariaLabel?: string;\n  onFocus?: (event: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (event: React.FocusEvent<HTMLTextAreaElement>) => void;\n  textRendererRef?: React.RefObject<HTMLElement>;\n  getText: () => string;\n  setText: (text: string) => void;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  setSelection: (newValue: (((current: Selection) => Selection) | Selection)) => void;\n  selection: Selection;\n}\n\ninterface Selection {\n  start: number;\n  end: number;\n}\n\ninterface CaretCoordinates {\n  left: number;\n  top: number;\n}\n\ninterface ASTNode {\n  type: 'text' | 'root' | ApiMessageEntityTypes;\n  value?: string;\n  children?: ASTNode[];\n  url?: string;\n  markers?: Marker[];\n}\n\ninterface Marker {\n  start: number;\n  end: number;\n  openSymbol: string;\n  closeSymbol: string;\n}\n\ninterface Token {\n  type: 'text' | ApiMessageEntityTypes;\n  value?: string;\n  symbol?: string;\n  text?: string;\n  url?: string;\n  children?: Token[];\n}\n\nfunction astToMarkup(ast: ASTNode): string {\n  function processNode(node: ASTNode): string {\n    switch (node.type) {\n      case 'root':\n        return node.children?.map(processNode).join('') || '';\n\n      case 'text':\n        return node.value || '';\n\n      case ApiMessageEntityTypes.Pre: {\n        const language = node.language ? `${node.language}\\n` : '';\n        return `\\`\\`\\`${language}${node.value || ''}\\`\\`\\``;\n      }\n\n      case ApiMessageEntityTypes.Blockquote: {\n        const content = node.children?.map(processNode).join('') || '';\n        return `\\`\\`\\`q ${content}\\`\\`\\``;\n      }\n\n      case ApiMessageEntityTypes.Code: {\n        const content = node.value || '';\n        if (!content || content.includes('\\n')) {\n          return content;\n        }\n        return `${MARKUP_SYMBOLS[node.type]}${content}${MARKUP_SYMBOLS[node.type]}`;\n      }\n\n      case ApiMessageEntityTypes.TextUrl: {\n        return `[${node.value || ''}](${node.url || ''})`;\n      }\n\n      case ApiMessageEntityTypes.CustomEmoji: {\n        return `![${node.value || ''}](${node.url || ''})`;\n      }\n\n      case ApiMessageEntityTypes.Mention: {\n        return node.value || '';\n      }\n\n      case ApiMessageEntityTypes.Bold:\n      case ApiMessageEntityTypes.Italic:\n      case ApiMessageEntityTypes.Strike:\n      case ApiMessageEntityTypes.Underline:\n      case ApiMessageEntityTypes.Spoiler: {\n        const content = node.children?.map(processNode).join('') || '';\n        if (!content || !content.trim()) {\n          return content;\n        }\n        const symbol = MARKUP_SYMBOLS[node.type];\n        return `${symbol}${content}${symbol}`;\n      }\n\n      default:\n        return '';\n    }\n  }\n\n  return processNode(ast);\n}\n\nfunction parseFormattedTextAsAst(formattedText: ApiFormattedText): ASTNode {\n  const { text, entities = [] } = formattedText || {};\n\n  if (!text) {\n    return { type: 'root', children: [] };\n  }\n\n  if (!entities.length) {\n    return {\n      type: 'root',\n      children: [{\n        type: 'text',\n        value: text,\n      }],\n    };\n  }\n\n  const sortedEntities = [...entities].sort((a, b) => {\n    if (a.offset !== b.offset) {\n      return a.offset - b.offset;\n    }\n    return b.length - a.length;\n  });\n\n  const root: ASTNode = {\n    type: 'root',\n    children: [],\n  };\n\n  let currentPosition = 0;\n\n  function createTextNode(content: string): ASTNode {\n    return {\n      type: 'text',\n      value: content,\n    };\n  }\n\n  while (currentPosition < text.length) {\n    // eslint-disable-next-line @typescript-eslint/no-loop-func\n    const currentEntities = sortedEntities.filter((e) => e.offset === currentPosition);\n\n    if (currentEntities.length > 0) {\n      const entity = currentEntities[0];\n      const content = text.slice(entity.offset, entity.offset + entity.length);\n\n      let node: ASTNode;\n\n      switch (entity.type) {\n        case ApiMessageEntityTypes.Pre: {\n          node = {\n            type: entity.type,\n            value: content,\n            language: entity.language,\n          };\n          break;\n        }\n\n        case ApiMessageEntityTypes.Code: {\n          node = {\n            type: ApiMessageEntityTypes.Code,\n            value: content,\n          };\n          break;\n        }\n\n        case ApiMessageEntityTypes.TextUrl: {\n          node = {\n            type: entity.type,\n            value: content,\n            url: entity.url,\n          };\n          break;\n        }\n\n        case ApiMessageEntityTypes.CustomEmoji: {\n          node = {\n            type: entity.type,\n            value: content,\n            documentId: entity.documentId,\n          };\n          break;\n        }\n\n        case ApiMessageEntityTypes.Mention: {\n          node = {\n            type: ApiMessageEntityTypes.Mention,\n            value: content,\n          };\n          break;\n        }\n\n        case ApiMessageEntityTypes.Bold:\n        case ApiMessageEntityTypes.Italic:\n        case ApiMessageEntityTypes.Strike:\n        case ApiMessageEntityTypes.Underline:\n        case ApiMessageEntityTypes.Spoiler:\n        case ApiMessageEntityTypes.Blockquote: {\n          const innerFormattedText: ApiFormattedText = {\n            text: content,\n            entities: sortedEntities\n              .filter((e) => e !== entity\n                && e.offset >= entity.offset\n                && e.offset + e.length <= entity.offset + entity.length)\n              .map((e) => ({\n                ...e,\n                offset: e.offset - entity.offset,\n              })),\n          };\n\n          node = {\n            type: entity.type as ApiMessageEntityTypes,\n            children: parseFormattedTextAsAst(innerFormattedText).children,\n          };\n          break;\n        }\n\n        default:\n          node = createTextNode(content);\n      }\n\n      root.children!.push(node);\n      currentPosition += entity.length;\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-loop-func\n      const nextEntityOffset = sortedEntities.find((e) => e.offset > currentPosition)?.offset ?? text.length;\n      const content = text.slice(currentPosition, nextEntityOffset);\n\n      if (content) {\n        root.children!.push(createTextNode(content));\n      }\n\n      currentPosition = nextEntityOffset;\n    }\n  }\n\n  return root;\n}\n\nfunction parseAstAsFormattedText(ast: ASTNode): ApiFormattedText {\n  let text = '';\n  const entities: ApiMessageEntity[] = [];\n\n  function processNode(node: ASTNode): number {\n    const startPosition = text.length;\n\n    switch (node.type) {\n      case 'root':\n        node.children?.forEach((child) => {\n          processNode(child);\n        });\n        break;\n\n      case 'text':\n        text += node.value || '';\n        break;\n\n      case ApiMessageEntityTypes.Pre: {\n        const value = node.value || '';\n        const trimmedValue = value.replace(/^\\n/, '').replace(/\\n$/, '');\n        text += trimmedValue;\n        if (trimmedValue) {\n          entities.push({\n            type: node.type,\n            offset: startPosition,\n            length: trimmedValue.length,\n            language: node.language,\n          });\n        }\n        break;\n      }\n\n      case ApiMessageEntityTypes.Blockquote: {\n        const blockStart = text.length;\n        let innerContent = '';\n        const collectInnerText = (n: ASTNode) => {\n          if (n.type === 'text') {\n            innerContent += n.value || '';\n          }\n          n.children?.forEach(collectInnerText);\n        };\n        node.children?.forEach(collectInnerText);\n\n        const trimmedContent = innerContent.replace(/^\\n/, '').replace(/\\n$/, '');\n        if (trimmedContent) {\n          text += trimmedContent;\n          entities.push({\n            type: node.type,\n            offset: blockStart,\n            length: trimmedContent.length,\n          });\n        }\n        break;\n      }\n\n      case ApiMessageEntityTypes.Code: {\n        const value = node.value || '';\n        if (!value || !value.trim()) {\n          text += value;\n        } else {\n          text += value;\n          entities.push({\n            type: node.type,\n            offset: startPosition,\n            length: value.length,\n          });\n        }\n        break;\n      }\n\n      case ApiMessageEntityTypes.TextUrl: {\n        const value = node.value || '';\n        text += value;\n        if (value) {\n          entities.push({\n            type: node.type,\n            offset: startPosition,\n            length: value.length,\n            url: node.url!,\n          });\n        }\n        break;\n      }\n\n      case ApiMessageEntityTypes.CustomEmoji: {\n        const value = node.value || '';\n        text += value;\n        if (value) {\n          entities.push({\n            type: node.type,\n            offset: startPosition,\n            length: value.length,\n            documentId: node.documentId!,\n          });\n        }\n        break;\n      }\n\n      case ApiMessageEntityTypes.Mention: {\n        const value = node.value || '';\n        text += value;\n        if (value) {\n          entities.push({\n            type: node.type,\n            offset: startPosition,\n            length: value.length,\n          });\n        }\n        break;\n      }\n\n      case ApiMessageEntityTypes.Bold:\n      case ApiMessageEntityTypes.Italic:\n      case ApiMessageEntityTypes.Strike:\n      case ApiMessageEntityTypes.Underline:\n      case ApiMessageEntityTypes.Spoiler: {\n        let formattedText = '';\n        const collectInnerText = (n: ASTNode) => {\n          if (n.type === 'text') {\n            formattedText += n.value || '';\n          }\n          n.children?.forEach(collectInnerText);\n        };\n        node.children?.forEach(collectInnerText);\n\n        if (!formattedText || !formattedText.trim()) {\n          text += formattedText;\n        } else {\n          const isFirst = text.length === 0;\n          // eslint-disable-next-line max-len\n          const isLast = !ast.children?.slice(startPosition + 1).some((n) => n.type !== 'text' || (n.value && n.value.trim()));\n\n          const leftTrimmed = isFirst ? formattedText.trimStart() : formattedText;\n          const rightTrimmed = isLast ? leftTrimmed.trimEnd() : leftTrimmed;\n\n          const startTrim = formattedText.length - leftTrimmed.length;\n          const endTrim = leftTrimmed.length - rightTrimmed.length;\n\n          text += formattedText.slice(0, startTrim);\n\n          const entityStart = text.length;\n          text += rightTrimmed;\n\n          if (rightTrimmed) {\n            entities.push({\n              type: node.type,\n              offset: entityStart,\n              length: rightTrimmed.length,\n            });\n          }\n\n          if (endTrim > 0) {\n            text += formattedText.slice(formattedText.length - endTrim);\n          }\n        }\n        break;\n      }\n    }\n\n    return startPosition;\n  }\n\n  processNode(ast);\n\n  entities.sort((a, b) => {\n    if (a.offset !== b.offset) {\n      return a.offset - b.offset;\n    }\n    return b.length - a.length;\n  });\n\n  return {\n    text: text.trim(),\n    entities: entities.length > 0 ? entities : undefined,\n  };\n}\n\nfunction tokenize(input: string, isNested: boolean = false): Token[] {\n  const tokens: Token[] = [];\n  let pos = 0;\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function isEscaped(pos: number): boolean {\n    let backslashCount = 0;\n    let i = pos - 1;\n    while (i >= 0 && input[i] === '\\\\') {\n      backslashCount++;\n      i--;\n    }\n    return backslashCount % 2 === 1;\n  }\n\n  function findClosingSymbol(symbol: string, startPos: number): number {\n    let newPos = startPos;\n    while (newPos < input.length) {\n      if (input.startsWith(symbol, newPos) && !isEscaped(newPos)) {\n        return newPos;\n      }\n      newPos++;\n    }\n    return -1;\n  }\n\n  function handleBlockQuoteOrPre(): { token: Token; newPos: number } | undefined {\n    if (!input.startsWith('```', pos) || isEscaped(pos) || isNested) {\n      return undefined;\n    }\n\n    let currentPos = pos + 3;\n    let isQuote = false;\n\n    if (input[currentPos] === 'q' && input[currentPos + 1] === ' ') {\n      isQuote = true;\n      currentPos += 2;\n    }\n\n    if (input[currentPos] === '\\n') {\n      currentPos++;\n    }\n\n    const endPos = findClosingSymbol('```', currentPos);\n    if (endPos === -1) {\n      return undefined;\n    }\n\n    const content = input.slice(currentPos, endPos);\n    const type = isQuote ? ApiMessageEntityTypes.Blockquote : ApiMessageEntityTypes.Pre;\n\n    return {\n      token: {\n        type,\n        value: type === ApiMessageEntityTypes.Pre ? content : undefined,\n        children: type === ApiMessageEntityTypes.Blockquote ? tokenize(content, true) : undefined,\n      },\n      newPos: endPos + 3,\n    };\n  }\n\n  function handleInlineCode(): { token: Token; newPos: number } | undefined {\n    if (input[pos] !== '`' || isEscaped(pos)) {\n      return undefined;\n    }\n\n    const endPos = findClosingSymbol('`', pos + 1);\n    if (endPos === -1) {\n      return undefined;\n    }\n\n    const content = input.slice(pos + 1, endPos);\n\n    if (content.length === 0 || content.includes('\\n')) {\n      return undefined;\n    }\n\n    return {\n      token: {\n        type: ApiMessageEntityTypes.Code,\n        value: content,\n      },\n      newPos: endPos + 1,\n    };\n  }\n\n  function handleTextUrl(): { token: Token; newPos: number } | undefined {\n    const isEmoji = input[pos] === '!' && input[pos + 1] === '[';\n    if ((!isEmoji && input[pos] !== '[') || isEscaped(pos)) {\n      return undefined;\n    }\n    const textStart = isEmoji ? pos + 2 : pos + 1;\n    const textEnd = findClosingSymbol(']', textStart);\n\n    if (textEnd === -1) {\n      return undefined;\n    }\n    if (input[textEnd + 1] !== '(') {\n      return undefined;\n    }\n\n    const urlStart = textEnd + 2;\n    const urlEnd = findClosingSymbol(')', urlStart);\n\n    if (urlEnd === -1) {\n      return undefined;\n    }\n\n    return {\n      token: {\n        type: isEmoji ? ApiMessageEntityTypes.CustomEmoji : ApiMessageEntityTypes.TextUrl,\n        value: input.slice(textStart, textEnd),\n        url: input.slice(urlStart, urlEnd),\n      },\n      newPos: urlEnd + 1,\n    };\n  }\n\n  function handleMention(): { token: Token; newPos: number } | undefined {\n    if (input[pos] !== '@' || isEscaped(pos)) return undefined;\n\n    let end = pos + 1;\n    while (end < input.length && /[a-zA-Z0-9_]/.test(input[end])) {\n      end++;\n    }\n\n    if (end === pos + 1) {\n      return undefined;\n    }\n\n    return {\n      token: {\n        type: ApiMessageEntityTypes.Mention,\n        value: input.slice(pos + 1, end),\n      },\n      newPos: end,\n    };\n  }\n\n  function handleFormatting(): { token: Token; newPos: number } | undefined {\n    const formatters = [\n      { symbol: '**', type: ApiMessageEntityTypes.Bold },\n      { symbol: '*', type: ApiMessageEntityTypes.Italic },\n      { symbol: '~~', type: ApiMessageEntityTypes.Strike },\n      { symbol: '__', type: ApiMessageEntityTypes.Underline },\n      { symbol: '||', type: ApiMessageEntityTypes.Spoiler },\n    ];\n\n    for (const { symbol, type } of formatters) {\n      if (!input.startsWith(symbol, pos) || isEscaped(pos)) continue;\n\n      const endPos = findClosingSymbol(symbol, pos + symbol.length);\n      if (endPos === -1) continue;\n\n      const innerContent = input.slice(pos + symbol.length, endPos);\n      const children = tokenize(innerContent, isNested);\n\n      return {\n        token: {\n          type,\n          children,\n        },\n        newPos: endPos + symbol.length,\n      };\n    }\n\n    return undefined;\n  }\n\n  while (pos < input.length) {\n    if (input[pos] === '\\\\' && pos + 1 < input.length) {\n      tokens.push({ type: 'text', value: input[pos + 1] });\n      pos += 2;\n      continue;\n    }\n\n    const blockResult = handleBlockQuoteOrPre();\n    if (blockResult) {\n      tokens.push(blockResult.token);\n      pos = blockResult.newPos;\n      continue;\n    }\n\n    const codeResult = handleInlineCode();\n    if (codeResult) {\n      tokens.push(codeResult.token);\n      pos = codeResult.newPos;\n      continue;\n    }\n\n    const urlResult = handleTextUrl();\n    if (urlResult) {\n      tokens.push(urlResult.token);\n      pos = urlResult.newPos;\n      continue;\n    }\n\n    const mentionResult = handleMention();\n    if (mentionResult) {\n      tokens.push(mentionResult.token);\n      pos = mentionResult.newPos;\n      continue;\n    }\n\n    const formattingResult = handleFormatting();\n    if (formattingResult) {\n      tokens.push(formattingResult.token);\n      pos = formattingResult.newPos;\n      continue;\n    }\n\n    let textEnd = pos + 1;\n    while (textEnd < input.length) {\n      const nextChar = input[textEnd];\n      if ('\\\\*_~`[|@!'.includes(nextChar) && !isEscaped(textEnd)) {\n        break;\n      }\n      textEnd++;\n    }\n\n    tokens.push({\n      type: 'text',\n      value: input.slice(pos, textEnd),\n    });\n    pos = textEnd;\n  }\n\n  return tokens;\n}\n\nfunction parse(tokens: Token[]): ASTNode {\n  function processToken(token: Token): ASTNode {\n    const node: ASTNode = {\n      type: token.type,\n      value: token.value,\n      language: token.language,\n      url: token.url,\n    };\n\n    if (token.children) {\n      node.children = token.children.map(processToken);\n    }\n\n    return node;\n  }\n\n  function mergeTextNodes(nodes: ASTNode[]): ASTNode[] {\n    const result: ASTNode[] = [];\n    let currentTextNode: ASTNode | undefined;\n\n    for (const node of nodes) {\n      if (node.type === 'text') {\n        if (currentTextNode) {\n          currentTextNode.value = (currentTextNode.value || '') + (node.value || '');\n        } else {\n          currentTextNode = node;\n          result.push(currentTextNode);\n        }\n      } else {\n        currentTextNode = undefined;\n        if (node.children) {\n          node.children = mergeTextNodes(node.children);\n        }\n        result.push(node);\n      }\n    }\n\n    return result;\n  }\n\n  const processedNodes = tokens.map(processToken);\n  const mergedNodes = mergeTextNodes(processedNodes);\n\n  return {\n    type: 'root',\n    children: mergedNodes,\n  };\n}\n\nfunction renderAst(node: ASTNode, selection: Selection): string {\n  const result: string[] = [];\n  let currentLine = '';\n  let currentPosition = 0;\n  let needNewLineStart = false;\n\n  const processTextNode = (text: string, start: number): string => {\n    let line = '';\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const currentPos = start + i;\n      const isSelected = currentPos >= selection.start && currentPos < selection.end;\n\n      if (char === ' ') {\n        line += `<span class=\"space${isSelected ? ' selected' : ''}\" data-offset=\"${currentPos}\"> </span>`;\n      } else if (char === '\\n') {\n        line += `<span class=\"newline${isSelected ? ' selected' : ''}\" data-offset=\"${currentPos}\"></span>`;\n        needNewLineStart = true;\n      } else {\n        const escapedChar = escapeHtml(char);\n        line += `<span${isSelected ? ' class=\"selected\"' : ''} data-offset=\"${currentPos}\">${escapedChar}</span>`;\n      }\n    }\n    return line;\n  };\n\n  const processMarkupSymbols = (symbols: string, start: number): string => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    let result = '';\n    for (let i = 0; i < symbols.length; i++) {\n      const currentPos = start + i;\n      const isSelected = currentPos >= selection.start && currentPos < selection.end;\n      // eslint-disable-next-line max-len\n      result += `<span class=\"markup-symbol${isSelected ? ' selected' : ''}\" data-offset=\"${currentPos}\">${symbols[i]}</span>`;\n    }\n    return result;\n  };\n\n  const startNewLine = (virtualOffset: number) => {\n    if (needNewLineStart) {\n      const isSelected = virtualOffset >= selection.start && virtualOffset < selection.end;\n      // eslint-disable-next-line max-len\n      currentLine = `<span class=\"newline-start${isSelected ? ' selected' : ''}\" data-virtual-offset=\"${virtualOffset}\"></span>`;\n      needNewLineStart = false;\n    }\n  };\n\n  const flushLine = () => {\n    if (currentLine) {\n      result.push(`<div class=\"editor-line\">${currentLine}</div>`);\n      currentLine = '';\n      startNewLine(currentPosition - 1);\n    }\n  };\n\n  // eslint-disable-next-line max-len\n  const renderBlockContent = (content: string | undefined, children: ASTNode[] | undefined, tag: string, type: ApiMessageEntityTypes, language?: string) => {\n    const blockAttrs = language\n      ? `class=\"code-block\" data-entity-type=\"${type}\" data-language=\"${language}\"`\n      : `class=\"text-entity-blockquote\" data-entity-type=\"${type}\"`;\n\n    result.push(`<${tag} ${blockAttrs}>`);\n\n    if (content) {\n      const lines = content.split('\\n');\n      lines.forEach((line, index) => {\n        currentLine = processTextNode(line, currentPosition);\n        currentPosition += line.length;\n\n        if (index < lines.length - 1) {\n          currentLine += processTextNode('\\n', currentPosition);\n          currentPosition += 1;\n        }\n        result.push(`<div class=\"editor-line\">${currentLine}</div>`);\n        currentLine = '';\n      });\n    } else if (children) {\n      // For Blockquote - render children with markup\n      children.forEach((child) => renderNode(child));\n      flushLine();\n    }\n\n    result.push(`</${tag}>`);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function renderNode(node: ASTNode): void {\n    switch (node.type) {\n      case 'root':\n        node.children?.forEach((child) => renderNode(child));\n        flushLine();\n        break;\n\n      case 'text': {\n        const text = node.value || '';\n        const lines = text.split('\\n');\n\n        lines.forEach((line, index) => {\n          currentLine += processTextNode(line, currentPosition);\n          currentPosition += line.length;\n\n          if (index < lines.length - 1) {\n            currentLine += processTextNode('\\n', currentPosition);\n            currentPosition += 1;\n            flushLine();\n          }\n        });\n        break;\n      }\n\n      case ApiMessageEntityTypes.Pre: {\n        flushLine();\n        const language = node.language ? `[${node.language}]` : '';\n\n        currentLine += processMarkupSymbols(`\\`\\`\\`${language}\\n`, currentPosition);\n        currentPosition += 3 + language.length + 1;\n        flushLine();\n\n        renderBlockContent(node.value, undefined, 'pre', node.type, node.language);\n\n        currentLine = processMarkupSymbols('\\n```', currentPosition);\n        currentPosition += 4;\n        flushLine();\n        break;\n      }\n\n      case ApiMessageEntityTypes.Blockquote: {\n        flushLine();\n\n        currentLine += processMarkupSymbols('```\\n', currentPosition);\n        currentPosition += 4;\n        flushLine();\n\n        renderBlockContent(undefined, node.children, 'blockquote', node.type);\n\n        currentLine = processMarkupSymbols('\\n```', currentPosition);\n        currentPosition += 4;\n        flushLine();\n        break;\n      }\n\n      case ApiMessageEntityTypes.Code: {\n        currentLine += processMarkupSymbols('`', currentPosition);\n        currentPosition += 1;\n\n        currentLine += `<code class=\"text-entity-code\" data-entity-type=\"${node.type}\">`;\n        currentLine += processTextNode(node.value || '', currentPosition);\n        currentPosition += (node.value || '').length;\n        currentLine += '</code>';\n\n        currentLine += processMarkupSymbols('`', currentPosition);\n        currentPosition += 1;\n        break;\n      }\n\n      case ApiMessageEntityTypes.Bold:\n      case ApiMessageEntityTypes.Italic:\n      case ApiMessageEntityTypes.Strike:\n      case ApiMessageEntityTypes.Underline:\n      case ApiMessageEntityTypes.Spoiler: {\n        const symbol = MARKUP_SYMBOLS[node.type] as string;\n        const tag = HTML_TAGS[node.type];\n        const className = node.type === ApiMessageEntityTypes.Spoiler ? ' class=\"spoiler\"' : '';\n\n        currentLine += processMarkupSymbols(symbol, currentPosition);\n        currentPosition += symbol.length;\n\n        currentLine += `<${tag}${className} data-entity-type=\"${node.type}\">`;\n        node.children?.forEach((child) => renderNode(child));\n        currentLine += `</${tag}>`;\n\n        currentLine += processMarkupSymbols(symbol, currentPosition);\n        currentPosition += symbol.length;\n        break;\n      }\n\n      case ApiMessageEntityTypes.TextUrl: {\n        currentLine += processMarkupSymbols('[', currentPosition);\n        currentPosition += 1;\n\n        // eslint-disable-next-line max-len\n        currentLine += `<a href=\"${escapeHtml(node.url || '')}\" target=\"_blank\" rel=\"noopener noreferrer\" data-entity-type=\"${node.type}\">`;\n        currentLine += processTextNode(node.value || '', currentPosition);\n        currentPosition += (node.value || '').length;\n        currentLine += '</a>';\n\n        const urlPart = `](${node.url})`;\n        currentLine += processMarkupSymbols(urlPart, currentPosition);\n        currentPosition += urlPart.length;\n        break;\n      }\n\n      case ApiMessageEntityTypes.Mention: {\n        currentLine += processMarkupSymbols('@', currentPosition);\n        currentPosition += 1;\n\n        currentLine += `<span class=\"mention\" data-entity-type=\"${node.type}\">`;\n        currentLine += processTextNode(node.value || '', currentPosition);\n        currentPosition += (node.value || '').length;\n        currentLine += '</span>';\n        break;\n      }\n\n      case ApiMessageEntityTypes.CustomEmoji: {\n        currentLine += processMarkupSymbols('![', currentPosition);\n        currentPosition += 2;\n\n        const alt = escapeHtml(node.value || '');\n        currentLine += processTextNode(node.value || '', currentPosition);\n        currentPosition += (node.value || '').length;\n\n        const urlPart = `](${node.url})`;\n        currentLine += processMarkupSymbols(urlPart, currentPosition);\n        currentPosition += urlPart.length;\n\n        currentLine += `<img class=\"emoji\" alt=\"${alt}\" src=\"${node.url || ''}\" data-entity-type=\"${node.type}\" />`;\n        break;\n      }\n    }\n  }\n\n  renderNode(node);\n  flushLine();\n\n  return result.join('');\n}\n\nfunction escapeHtml(text: string): string {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\nfunction parseMarkup(text: string): ASTNode {\n  return parse(tokenize(text));\n}\n\nconst TextEditor: React.FC<TextEditorProps> = ({\n  inputRef,\n  id,\n  className,\n  textRendererRef,\n  onKeyDown,\n  ariaLabel,\n  onFocus,\n  onBlur,\n  setText,\n  getText,\n  onMouseDown,\n  setSelection,\n  selection,\n}) => {\n  let contentRef = useRef<HTMLDivElement>();\n  let textareaRef = useRef<HTMLTextAreaElement>();\n  const caretRef = useRef<HTMLDivElement>();\n\n  if (textRendererRef) {\n    // @ts-ignore\n    contentRef = textRendererRef as RefObject<HTMLDivElement | null>;\n  }\n  if (inputRef) {\n    // @ts-ignore\n    textareaRef = inputRef;\n  }\n\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n\n    const handleSelectionChange = () => {\n      if (document.activeElement === textarea) {\n        Object.assign(caretRef.current!.style, {\n          display: 'block',\n        });\n        setSelection({\n          start: textarea.selectionStart || 0,\n          end: textarea.selectionEnd || 0,\n        });\n      }\n    };\n\n    document.addEventListener('selectionchange', handleSelectionChange);\n    textarea.addEventListener('input', handleSelectionChange);\n    textarea.addEventListener('keyup', handleSelectionChange);\n    textarea.addEventListener('focus', handleSelectionChange);\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      document.removeEventListener('selectionchange', handleSelectionChange);\n      textarea.removeEventListener('input', handleSelectionChange);\n      textarea.removeEventListener('keyup', handleSelectionChange);\n      textarea.addEventListener('focus', handleSelectionChange);\n    };\n  }, [setSelection]);\n\n  const handleInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  const getPositionFromRange = (range: Range): number => {\n    const container = range.startContainer;\n    const offset = range.startOffset;\n\n    if (container.nodeType === Node.TEXT_NODE) {\n      const parentSpan = container.parentElement?.closest('span[data-offset]');\n      if (parentSpan) {\n        return Number(parentSpan.getAttribute('data-offset')!) + offset;\n      }\n    } else if (container.nodeType === Node.ELEMENT_NODE) {\n      const element = container as Element;\n      const span = element.closest('span[data-offset]');\n      if (span) {\n        return Number(span.getAttribute('data-offset')!) + (offset > 0 ? 1 : 0);\n      }\n    }\n\n    return 0;\n  };\n\n  const handlePointerDown = (e: { clientX: number; clientY: number; target: HTMLElement; detail: number }) => {\n    if (!e.target) {\n      textareaRef.current!.selectionStart = 0;\n      textareaRef.current!.selectionEnd = 0;\n      setTimeout(() => {\n        textareaRef.current!.focus();\n      }, 0);\n      return;\n    }\n\n    if (e.detail >= 2) {\n      const line = e.target.closest('.editor-line');\n      if (!line) return;\n\n      const spans = Array.from(line.querySelectorAll('span[data-offset]'))\n        .filter((span) => !span.classList.contains('newline-end'));\n\n      if (spans.length === 0) return;\n\n      const firstSpan = spans[0];\n      const lastSpan = spans[spans.length - 1];\n\n      const startPosition = Number(firstSpan.getAttribute('data-offset')!);\n      const endPosition = Number(lastSpan.getAttribute('data-offset')!) + 1;\n\n      textareaRef.current!.selectionStart = startPosition;\n      textareaRef.current!.selectionEnd = endPosition;\n\n      setTimeout(() => {\n        textareaRef.current!.focus();\n      }, 0);\n      return;\n    }\n\n    if (e.target.classList.contains('editor-line')) {\n      const clickedLine = e.target as HTMLElement;\n      const spans = Array.from(clickedLine.querySelectorAll('span[data-offset]'))\n        .filter((span) => !span.classList.contains('newline-end') && !span.classList.contains('newline-start'));\n\n      if (spans.length > 0) {\n        const lastSpan = spans[spans.length - 1];\n        const position = Number(lastSpan.getAttribute('data-offset')!) + 1;\n        textareaRef.current!.selectionStart = position;\n        textareaRef.current!.selectionEnd = position;\n      } else {\n        const lines = Array.from(contentRef.current!.querySelectorAll('.editor-line'));\n        const currentLineIndex = lines.indexOf(clickedLine);\n        let position = 0;\n\n        for (let i = 0; i < currentLineIndex; i++) {\n          const lineSpans = Array.from(lines[i].querySelectorAll('span[data-offset]'))\n            .filter((span) => !span.classList.contains('newline-start'));\n          if (lineSpans.length > 0) {\n            const lastSpanInLine = lineSpans[lineSpans.length - 1];\n            position = Number(lastSpanInLine.getAttribute('data-offset')!) + 1;\n          }\n        }\n\n        textareaRef.current!.selectionStart = position;\n        textareaRef.current!.selectionEnd = position;\n      }\n\n      setTimeout(() => {\n        textareaRef.current!.focus();\n        setTimeout(() => {\n          textareaRef.current?.focus();\n        }, 50);\n      }, 0);\n      return;\n    }\n\n    const range = document.caretRangeFromPoint?.(e.clientX, e.clientY);\n    if (range && textareaRef.current) {\n      const position = getPositionFromRange(range);\n      textareaRef.current.selectionStart = position;\n      textareaRef.current.selectionEnd = position;\n    }\n\n    onMouseDown?.(e);\n\n    setTimeout(() => {\n      textareaRef.current!.focus();\n      setTimeout(() => {\n        textareaRef.current?.focus();\n      }, 50);\n    }, 0);\n  };\n\n  const getCaretCoordinates = (): CaretCoordinates | null => {\n    const position = textareaRef.current!.selectionStart;\n\n    const targetNewlineSpan = contentRef.current!.querySelector(`span[data-virtual-offset=\"${position - 1}\"]`);\n\n    if (targetNewlineSpan) {\n      const spanRect = targetNewlineSpan.getBoundingClientRect();\n      const containerRect = contentRef.current!.getBoundingClientRect();\n      const containerStyle = getComputedStyle(contentRef.current!);\n\n      return {\n        // eslint-disable-next-line max-len\n        left: Number(containerStyle.marginLeft.replace('px', '')) + Number(containerStyle.paddingLeft.replace('px', '')),\n        top: spanRect.top - containerRect.top,\n      };\n    }\n\n    const previousSpan = contentRef.current!.querySelector(`span[data-offset=\"${position - 1}\"]`);\n\n    if (previousSpan) {\n      const spanRect = previousSpan.getBoundingClientRect();\n      const containerRect = contentRef.current!.getBoundingClientRect();\n\n      return {\n        left: spanRect.right - containerRect.left,\n        top: spanRect.top - containerRect.top,\n      };\n    }\n\n    const newlineSpan = contentRef.current!.querySelector(`span[data-virtual-offset=\"${position}\"]`);\n\n    if (newlineSpan) {\n      const spanRect = newlineSpan.getBoundingClientRect();\n      const containerRect = contentRef.current!.getBoundingClientRect();\n      const containerStyle = getComputedStyle(contentRef.current!);\n\n      return {\n        // eslint-disable-next-line max-len\n        left: Number(containerStyle.marginLeft.replace('px', '')) + Number(containerStyle.paddingLeft.replace('px', '')),\n        top: spanRect.top - containerRect.top,\n      };\n    }\n\n    const targetSpan = contentRef.current!.querySelector(`span[data-offset=\"${position}\"]`);\n\n    if (targetSpan) {\n      const spanRect = targetSpan.getBoundingClientRect();\n      const containerRect = contentRef.current!.getBoundingClientRect();\n\n      return {\n        left: spanRect.left - containerRect.left,\n        top: spanRect.top - containerRect.top,\n      };\n    }\n\n    const containerRect = getComputedStyle(contentRef.current!);\n\n    return {\n      left: Number(containerRect.marginLeft.replace('px', '')) + Number(containerRect.paddingLeft.replace('px', '')),\n      top: Number(containerRect.marginTop.replace('px', '')) + Number(containerRect.paddingTop.replace('px', '')),\n    };\n  };\n\n  const blurHandler = useCallback((event: React.FocusEvent<HTMLTextAreaElement, Element>) => {\n    Object.assign(caretRef.current!.style, {\n      display: 'none',\n    });\n    onBlur?.(event);\n  }, [onBlur]);\n\n  const focusHandler = useCallback((event: React.FocusEvent<HTMLTextAreaElement, Element>) => {\n    Object.assign(caretRef.current!.style, {\n      display: 'block',\n    });\n    onFocus?.(event);\n  }, [onFocus]);\n\n  useEffect(() => {\n    if (getText() && !textareaRef?.current?.value) {\n      setSelection({\n        start: getText().length,\n        end: getText().length,\n      });\n    }\n  }, [getText]);\n\n  useLayoutEffect(() => {\n    if (!contentRef.current || !caretRef.current || !textareaRef?.current) return;\n\n    const ast = parseMarkup(getText());\n    const html = renderAst(ast, selection);\n    contentRef.current.innerHTML = html || '<span></span>';\n\n    if (selection.start === selection.end) {\n      const coords = getCaretCoordinates();\n      if (coords) {\n        Object.assign(caretRef.current.style, {\n          left: `${coords.left}px`,\n          top: `${coords.top}px`,\n        });\n      }\n    } else {\n      caretRef.current.style.display = 'none';\n    }\n  }, [getText, selection]);\n\n  return (\n    <>\n      <div\n        ref={contentRef as React.LegacyRef<HTMLDivElement>}\n        id={id}\n        className={buildClassName(className, 'editor-content')}\n        onMouseDown={handlePointerDown as unknown as React.MouseEventHandler<HTMLDivElement>}\n        // onClick={onClick}\n        // onContextMenu={onContextMenu}\n        // onTouchCancel={onTouchCancel}\n        aria-label={ariaLabel}\n      />\n      <textarea\n        ref={textareaRef as React.LegacyRef<HTMLTextAreaElement>}\n        className={buildClassName(className, 'editor-textarea')}\n        value={getText()}\n        onChange={handleInput}\n        spellCheck={false}\n        onFocus={focusHandler as unknown as React.FocusEventHandler<HTMLTextAreaElement>}\n        onKeyDown={onKeyDown}\n        onBlur={blurHandler as unknown as React.FocusEventHandler<HTMLTextAreaElement>}\n      />\n      <div ref={caretRef as React.LegacyRef<HTMLDivElement>} className=\"caret\" />\n    </>\n  );\n};\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (html && astToMarkup(parseFormattedTextAsAst(draft?.text!)) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseAstAsFormattedText(parseMarkup(html)),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(astToMarkup(parseFormattedTextAsAst(draft?.text!)));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nconst INPUT_CUSTOM_EMOJI_SELECTOR = 'img[data-document-id]';\n\nexport type TextFormatterProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  onClose: () => void;\n  setSelection: (range: Selection) => void;\n  selection: Selection;\n  setText: (html: string) => void;\n  getText: Signal<string>;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TextFormatter: FC<TextFormatterProps> = ({\n  isOpen,\n  anchorPosition,\n  onClose,\n  setSelection,\n  selection,\n  setText,\n  getText,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selection.start === selection.end) return;\n    const value = getText();\n    const spoiler = `||${value?.slice(selection.start, selection.end)}||`;\n    setSelection({\n      start: selection.start + 2,\n      end: selection.end + 2,\n    });\n    setText(`${value?.slice(0, selection.start)}${spoiler}${value?.slice(selection.end, value?.length)}`);\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    if (selection.start === selection.end) return;\n    const value = getText();\n    const bold = `**${value?.slice(selection.start, selection.end)}**`;\n    setSelection({\n      start: selection.start + 2,\n      end: selection.end + 2,\n    });\n    setText(`${value?.slice(0, selection.start)}${bold}${value?.slice(selection.end, value?.length)}`);\n    setSelectedTextFormats((selectedFormats) => {\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    if (selection.start === selection.end) return;\n    const value = getText();\n    const italic = `*${value?.slice(selection.start, selection.end)}*`;\n    setSelection({\n      start: selection.start + 2,\n      end: selection.end + 2,\n    });\n    setText(`${value?.slice(0, selection.start)}${italic}${value?.slice(selection.end, value?.length)}`);\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    if (selection.start === selection.end) return;\n    const value = getText();\n    const underline = `__${value?.slice(selection.start, selection.end)}__`;\n    setSelection({\n      start: selection.start + 2,\n      end: selection.end + 2,\n    });\n    setText(`${value?.slice(0, selection.start)}${underline}${value?.slice(selection.end, value?.length)}`);\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selection.start === selection.end) return;\n    const value = getText();\n    const strikethrough = `~~${value?.slice(selection.start, selection.end)}~~`;\n    setSelection({\n      start: selection.start + 2,\n      end: selection.end + 2,\n    });\n    setText(`${value?.slice(0, selection.start)}${strikethrough}${value?.slice(selection.end, value?.length)}`);\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      strikethrough: false,\n    }));\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selection.start === selection.end) return;\n    const value = getText();\n    const mono = `\\`${value?.slice(selection.start, selection.end)}\\``;\n    setSelection({\n      start: selection.start + 1,\n      end: selection.end + 1,\n    });\n    setText(`${value?.slice(0, selection.start)}${mono}${value?.slice(selection.end, value?.length)}`);\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      monospace: false,\n    }));\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    if (selection.start === selection.end) return;\n    const value = getText();\n    const mono = `[${value?.slice(selection.start, selection.end)}](${linkUrl})`;\n    setSelection({\n      start: selection.start + 1,\n      end: selection.end + 1,\n    });\n    setText(`${value?.slice(0, selection.start)}${mono}${value?.slice(selection.end, value?.length)}`);\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// const CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\n// const INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype MessageInputOwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype MessageInputStateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\n// const SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<MessageInputOwnProps & MessageInputStateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef as unknown as RefObject<HTMLDivElement>,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const textRendererRef = useRef<HTMLDivElement>();\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const scrollHeight = inputRef.current!.scrollHeight;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  }, [maxInputHeight]);\n\n  useEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef?.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n  const [selection, setSelection] = useState<Selection>({ start: 0, end: 0 });\n  const selectionRef = useRef<Selection>(selection);\n  useEffect(() => {\n    selectionRef.current = selection;\n  }, [selection]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    return selectionRef.current.start !== selectionRef.current.end;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    // const selectionRange = window.getSelection()!.getRangeAt(0);\n    // const selectionRect = selectionRange.getBoundingClientRect();\n    // const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    // const x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    // if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n    //   x = TEXT_FORMATTER_SAFE_AREA_PX;\n    // } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n    //   x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    // }\n\n    setTextFormatterAnchorPosition({\n      // x,\n      // y: scrollerRect.top,\n      x: 0,\n      y: 0,\n    });\n\n    // setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  // useLayoutEffect(() => {\n  //   if (textareaRef.current) {\n  //     textareaRef.current.style.position = 'absolute';\n  //     textareaRef.current.style.top = '-80px';\n  //   }\n  // }, []);\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest('.message-input-wrapper') || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  //   if (isContextMenuOpenRef.current) {\n  //     return;\n  //   }\n  //\n  //   isContextMenuOpenRef.current = true;\n  //\n  //   function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n  //     if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n  //       return;\n  //     }\n  //\n  //     setTimeout(() => {\n  //       isContextMenuOpenRef.current = false;\n  //     }, CONTEXT_MENU_CLOSE_DELAY_MS);\n  //\n  //     window.removeEventListener('keydown', handleCloseContextMenu);\n  //     window.removeEventListener('mousedown', handleCloseContextMenu);\n  //   }\n  //\n  //   document.addEventListener('mousedown', handleCloseContextMenu);\n  //   document.addEventListener('keydown', handleCloseContextMenu);\n  // }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  // function handleChange(e: React.ChangeEvent<HTMLDivElement>) {\n  //   const { innerHTML, textContent } = e.currentTarget;\n  //\n  //   onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n  //\n  //   // Reset focus on the input to remove any active styling when input is cleared\n  //   if (\n  //     !IS_TOUCH_ENV\n  //     && (!textContent || !textContent.length)\n  //     // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n  //     && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n  //     && !(innerHTML.includes('custom-emoji'))\n  //   ) {\n  //     const selection = window.getSelection()!;\n  //     if (selection) {\n  //       inputRef.current!.blur();\n  //       selection.removeAllRanges();\n  //       focusEditableElement(inputRef.current!, true);\n  //     }\n  //   }\n  // }\n  //\n  // function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n  //   if (!checkSelection()) {\n  //     return;\n  //   }\n  //\n  //   setIsTextFormatterDisabled(!isTextFormatterDisabled);\n  //\n  //   if (!isTextFormatterDisabled) {\n  //     e.preventDefault();\n  //     e.stopPropagation();\n  //\n  //     processSelection();\n  //   } else {\n  //     closeTextFormatter();\n  //   }\n  // }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          {/* eslint-disable react/jsx-no-bind */}\n          <TextEditor\n            inputRef={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            textRendererRef={textRendererRef as RefObject<HTMLElement>}\n            setText={onUpdate}\n            getText={getHtml}\n            // onClick={focusInput}\n            // onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            setSelection={setSelection}\n            selection={selection}\n            // onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            // onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        setText={onUpdate}\n        getText={getHtml}\n        setSelection={setSelection}\n        selection={selection}\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nconst LocalMessageInput = memo(withGlobal<MessageInputOwnProps>(\n  (global, { chatId, threadId }: MessageInputOwnProps): MessageInputStateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef as unknown as RefObject<HTMLDivElement>,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef as unknown as RefObject<HTMLDivElement>,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseAstAsFormattedText(parseMarkup(getHtml()));\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseAstAsFormattedText(parseMarkup(getHtml()));\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n    || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => {\n    saveEffectInDraft({ chatId, threadId, effectId: undefined });\n  });\n\n  const handleStopEffect = useLastCallback(() => {\n    hideEffectInComposer({});\n  });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#000\"\n                filter=\"url(#composerAppendix)\"\n              />\n              <path\n                d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\"\n                fill=\"#FFF\"\n                className=\"corner\"\n              />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <LocalMessageInput\n            ref={inputRef as unknown as RefObject<HTMLTextAreaElement>}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n      && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiFormattedText } from '../../api/types';\nimport { ApiMessageEntityTypes } from '../../api/types';\n\nimport renderText from './helpers/renderText';\n\nimport CustomEmoji from './CustomEmoji';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  className?: string;\n  title: ApiFormattedText;\n  emoticon?: string;\n  size?: number;\n  isBig?: boolean;\n  noTitleAnimations?: boolean;\n};\n\nconst FolderIcon: FC<OwnProps> = ({\n  className, title, emoticon, size, isBig, noTitleAnimations,\n}) => {\n  const icon = useMemo(() => {\n    switch (emoticon) {\n      case '🤖':\n        return <Icon name=\"folder-bot\" className={className} />;\n      case '📢':\n        return <Icon name=\"folder-channel\" className={className} />;\n      case '✅':\n        return <Icon name=\"folder-chat\" className={className} />;\n      case '💬':\n        return <Icon name=\"folder-chats\" className={className} />;\n      case '📁':\n        return <Icon name=\"folder-folder\" className={className} />;\n      case '👥':\n        return <Icon name=\"folder-group\" className={className} />;\n      case '⭐':\n        return <Icon name=\"folder-star\" className={className} />;\n      case '👤':\n        return <Icon name=\"folder-user\" className={className} />;\n    }\n    return undefined;\n  }, [className, emoticon]);\n\n  const customEmoji = useMemo(() => {\n    if (!title.entities || title.entities.length < 1\n      || title.entities[0].type !== ApiMessageEntityTypes.CustomEmoji) return undefined;\n    return (\n      <CustomEmoji\n        className={className}\n        key={title.entities[0].documentId}\n        documentId={title.entities[0].documentId}\n        size={size}\n        isBig\n        noPlay={noTitleAnimations}\n      />\n    );\n  }, [className, size, title.entities, noTitleAnimations]);\n\n  const emoji = useMemo(() => {\n    const emojiRegex = /(?=\\p{Emoji})(?!\\p{Number})/u;\n    const split = title.text.split(' ');\n\n    if (split.length < 1) return undefined;\n    if (emojiRegex.test(split[0])) {\n      return renderText(split[0], isBig ? ['hq_emoji'] : ['emoji']);\n    } else if (emojiRegex.test(split[split.length - 1])) {\n      return renderText(split[split.length - 1], isBig ? ['hq_emoji'] : ['emoji']);\n    }\n\n    return undefined;\n  }, [isBig, title.text]);\n\n  if (customEmoji) return customEmoji;\n  if (emoji) return emoji;\n  if (icon) return icon;\n  return <Icon name=\"folder-folder\" className={className} />;\n};\n\nexport default memo(FolderIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { isApiPeerChat } from '../../../../global/helpers/peers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            lastMessageSender && !isApiPeerChat(lastMessageSender) ? lastMessageSender : undefined,\n            lastMessageSender && isApiPeerChat(lastMessageSender) ? lastMessageSender : chat,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport { getGiftAttributes, getStickerFromGift } from '../../common/helpers/gifts';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const giftStickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const gift = webPage?.gift;\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(gift)!;\n    const attributes = getGiftAttributes(gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    return (\n      <div\n        className=\"web-page-gift web-page-centered web-page-unique\"\n        onClick={() => handleOpenTelegramLink()}\n      >\n        <div className=\"web-page-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"web-page-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n          />\n        </div>\n        <div ref={giftStickersRef} key={sticker.id} className=\"WebPage--unique-sticker\">\n          <StickerView\n            containerRef={giftStickersRef}\n            sticker={sticker}\n            size={STAR_GIFT_STICKER_SIZE}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          renderStarGiftUnique()\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setEmoji' | 'setIcon'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setIcon':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          emoticon: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","RE_COMMAND","URL_ENTITIES","Set","ApiMessageEntityTypes","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","async","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","Promise","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","attachments","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","groupedId","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","files","target","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","from","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","file","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","text","isDisabled","textRef","textEl","scrollWidth","closest","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","stripCustomEmoji","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","parseHtmlAsFormattedText","linkEntity","entities","find","entity","url","match","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","MARKUP_SYMBOLS","Bold","Italic","Strike","Underline","Code","Pre","Blockquote","Spoiler","CustomEmoji","Mention","HTML_TAGS","astToMarkup","ast","processNode","children","language","trim","symbol","parseFormattedTextAsAst","sortedEntities","sort","a","b","offset","root","currentPosition","currentEntities","documentId","innerFormattedText","nextEntityOffset","parseAstAsFormattedText","startPosition","child","trimmedValue","replace","blockStart","innerContent","collectInnerText","n","trimmedContent","isFirst","isLast","leftTrimmed","trimStart","rightTrimmed","trimEnd","startTrim","endTrim","entityStart","tokenize","input","isNested","tokens","pos","isEscaped","backslashCount","findClosingSymbol","startPos","newPos","startsWith","handleBlockQuoteOrPre","currentPos","isQuote","endPos","token","handleInlineCode","handleTextUrl","isEmoji","textStart","textEnd","urlStart","urlEnd","handleMention","test","handleFormatting","formatters","blockResult","codeResult","urlResult","mentionResult","formattingResult","nextChar","escapeHtml","parseMarkup","mergeTextNodes","currentTextNode","processToken","TextEditor","inputRef","textRendererRef","onKeyDown","onFocus","onBlur","setText","getText","onMouseDown","setSelection","selection","contentRef","textareaRef","caretRef","textarea","handleSelectionChange","activeElement","assign","display","selectionStart","selectionEnd","addEventListener","removeEventListener","blurHandler","event","focusHandler","currentLine","needNewLineStart","processTextNode","line","char","processMarkupSymbols","symbols","flushLine","virtualOffset","startNewLine","renderBlockContent","tag","blockAttrs","lines","split","index","renderNode","urlPart","alt","renderAst","innerHTML","coords","getCaretCoordinates","position","targetNewlineSpan","spanRect","containerRect","containerStyle","getComputedStyle","Number","marginLeft","paddingLeft","top","previousSpan","right","newlineSpan","targetSpan","marginTop","paddingTop","detail","spans","querySelectorAll","span","contains","firstSpan","lastSpan","getAttribute","endPosition","clickedLine","currentLineIndex","lineSpans","lastSpanInLine","range","caretRangeFromPoint","clientY","container","startContainer","startOffset","Node","TEXT_NODE","parentSpan","parentElement","ELEMENT_NODE","getPositionFromRange","onChange","spellCheck","isFrozen","TextFormatter","anchorPosition","containerRef","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","getFormatButtonClassName","key","fKey","monospace","strikethrough","useVirtualBackdrop","handleSpoilerText","spoiler","handleBoldText","bold","selectedFormats","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","mono","handleLinkUrlConfirm","handleKeyDown","handler","k","u","m","s","p","getKeyFromEvent","altKey","ctrlKey","metaKey","preventDefault","linkUrlConfirmClassName","stopEvent","placeholder","autoComplete","inputMode","SCROLLER_CLASS","IGNORE_KEYS","LocalMessageInput","messageSendKeyCombo","settings","byKey","isSelectModeActive","selectIsInSelectMode","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","MessageInput","captionLimit","isAttachmentModalInput","isStoryInput","customEmojiPrefix","editableInputId","isReady","timedPlaceholderLangKey","timedPlaceholderDate","forcedPlaceholder","canSendPlainText","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","onSend","onScroll","isNeedPremium","editLastMessage","replyToNextMessage","showAllowedMessageTypesNotification","openPremiumModal","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","scrollHeight","newHeight","isOverflown","exec","transitionDuration","log","abs","toggle","requestMutation","htmlRef","focusInput","getIsHeavyAnimating","focusEditableElement","handleCloseTextFormatter","getSelection","removeAllRanges","empty","clearSelection","selectionRef","processSelection","processSelectionWithTimeout","clearTimeout","handleOpenPremiumModal","EDITABLE_INPUT_ID","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","shiftKey","code","tagName","isContentEditable","newEvent","KeyboardEvent","dispatchEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","blur","isTouched","inputScrollerContentClass","isComposing","targetIndexDelta","once","currentTarget","TextTimer","langKey","endsAt","onEnd","VALID_TARGET_IDS","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","handlePaste","clipboardData","has","pastedText","getData","pastedFormattedText","fragment","clipboardContent","filteredNodes","cleanNodes","getCleanDocument","err","DEBUG","console","error","textContents","getElementsByTagName","HTMLElement","removeAttribute","replaceWith","dataset","entityType","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","MentionName","preparePastedHtml","containsCustomEmoji","getFilesFromDataTransferItems","textToPaste","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","all","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","concat","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","onDropHide","inputPlaceholder","editableInputCssSelector","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","getAllowedAttachmentOptions","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","Event","bubbles","requestNextMutation","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","getPlainText","parseBotQuery","prevUsername","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useEffectWithPrevDeps","prevThreadId","prevDraft","customEmojiIds","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","element","lastChild","textLength","createRange","setStart","setEnd","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","FolderIcon","isBig","noTitleAnimations","customEmoji","noPlay","emojiRegex","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","peerColor","noUserColors","shoudReset","emojiIconClassName","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","ProfileInfo","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","forceAlways","shouldLoop","birthdate","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","replyToMessageId","getMessageReplyInfo","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","IS_APP","IS_MAC_OS","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","isApiPeerChat","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","clone","getPropertyValue","snapContainer","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","options","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","uniqueId","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","AbsoluteVideo","constructor","videoUrl","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","THROTTLE_MS","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","AnimatedSticker","onEnded","Photo","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","useLayoutEffectWithPrevDeps","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","giftStickersRef","handleMediaClick","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","gift","getStickerFromGift","attributes","getGiftAttributes","backdrop","pattern","model","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","renderStarGiftUnique","shouldSkipModal","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","staticIcon","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","availableReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","STRONG","I","EM","INS","U","S","STRIKE","DEL","CODE","PRE","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","parsedHtml","parseMarkdown","parseMarkdownLinks","fixImageContent","textIndex","recursionDeepness","addEntity","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","removeAllSelections","fileSelector","accept","noMultiple","onchange","isElementInViewport","windowHeight"],"sourceRoot":""}